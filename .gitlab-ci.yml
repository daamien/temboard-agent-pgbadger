
image: python:latest

stages:
  - prepare
  - build
  - test
  - deploy

install_pgbadger:
  stage: prepare
  script: 
  - apt-get update && apt-get install -y git bzip2
  - git clone --branch 'master' https://github.com/dalibo/pgbadger.git src/pgBadger
  - git clone --branch 'v3.3' https://github.com/dalibo/pgbadger.git src/pgBadger-3.3
  - git clone --branch 'v9.0' https://github.com/dalibo/pgbadger.git src/pgBadger-9.0
  - mkdir -p _tmp/reports
  - mkdir -p _tmp/log
  - bunzip2 -d src/pgBadger/t/fixtures/light.postgres.log.bz2 -c > _tmp/log/postgresql.log
  artifacts:
    paths:
    - _tmp/
    - src/
    expire_in: 1 hour

install:
  stage: build
  image: dalibo/temboard-agent
  script:
  - bash share/docker/init_temboardagent_with_pgbadger.sh
  when: manual      

api_test:
  stage: test
  image: dalibo/temboard-agent
  script:
  - make api_pgbadger_version
  when: manual    

unit-latest:
  stage: test
  image: python:latest
  script:
  # fetch pgBadger from the PGDG repo
  - sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
  - apt-get update && apt-get install -y lsb-release wget ca-certificates
  - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
  - apt-get update && apt-get install pgbadger -y --install-suggests
  #- apt-get update & apt-get install -y libjson-xs-perl
  - pip install -r tests/unit/requirements.txt
  - python -m pytest --cov=pgbadger tests/unit/

unit-2.7:
  stage: test
  image: python:2.7-stretch
  script:
  - apt-get update & apt-get install -y libjson-xs-perl
  - pip install -r requirements.txt 
  - python -m pytest --cov=pgbadger tests/unit/
